<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>誓言的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-22T10:04:08.838Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>誓言</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>String的收获</title>
    <link href="http://yoursite.com/2019/11/22/String%E7%9A%84%E6%94%B6%E8%8E%B7/"/>
    <id>http://yoursite.com/2019/11/22/String的收获/</id>
    <published>2019-11-22T08:58:55.338Z</published>
    <updated>2019-11-22T10:04:08.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="String的收获"><a href="#String的收获" class="headerlink" title="String的收获"></a>String的收获</h2><h3 id="String-str1-“123”-和String-str2-new-String-“123”"><a href="#String-str1-“123”-和String-str2-new-String-“123”" class="headerlink" title="String str1 = “123”;和String str2 = new String(“123”);"></a>String str1 = “123”;和String str2 = new String(“123”);</h3><h4 id="1-String-str1-“123”"><a href="#1-String-str1-“123”" class="headerlink" title="1.String str1 = “123”;"></a>1.String str1 = “123”;</h4><blockquote><p>最多创建一个String的对象，如果常量池已经存在“123”，就不需要new String().直接从常量池中获取该值。<br>如果常量池中没有该对象就new String(“123”);并开辟空间加载到常量中便于以后调用</p></blockquote><a id="more"></a><h4 id="2-String-str2-new-String-“123”"><a href="#2-String-str2-new-String-“123”" class="headerlink" title="2.String str2 = new String(“123”);"></a>2.String str2 = new String(“123”);</h4><blockquote><p>最多创建两个String对象，最少创建一个String对象。<br>只要有 <strong>new</strong> 关键字就会在堆内存中开辟一个空间，在判断常量池中是否存在该常量“123”，如果不存在就会在常量池中new一个对象并保存在常量池中</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20191122164318131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTAxODQ0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="二，"><a href="#二，" class="headerlink" title="二，"></a>二，</h3><ol><li>单独使用“”引号创建的字符串都是直接量，编译时期就确定加入到常量池中</li><li>使用new String(“”)创建的对象会储存到堆内存中，运行时期才创建</li><li>使用只包含直接量的字符串连接符如“aa”+”bb”创建的也是直接量，编译期就能确定</li><li>使用包含String直接量（无final修饰符）的字符串表达式  如“aa”+str;创建的对象是运行期创建的，储存在堆内存中</li></ol><blockquote><p>通过变量或者调用方法去拼接字符串，都是在运行时期才能确定变量的值和方法的返回值，没有编译优化的操作。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getStr</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"AB"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">String str1 = <span class="string">"ABCD"</span>;</span><br><span class="line">String str2 = <span class="string">"A"</span>+<span class="string">"B"</span>+<span class="string">"C"</span>+<span class="string">"D"</span>;<span class="comment">//编译优化，编译时期优化为“ABCD”</span></span><br><span class="line">String str3 = <span class="string">"AB"</span>+<span class="string">"CD"</span>;     <span class="comment">//编译优化，编译时期优化为“ABCD”</span></span><br><span class="line">String str4 = <span class="keyword">new</span> String(<span class="string">"ABCD"</span>);<span class="comment">//无编译优化，编译时期为String对象</span></span><br><span class="line">String temp= <span class="string">"AB"</span>;</span><br><span class="line">String str5 = temp + <span class="string">"CD"</span>;<span class="comment">//无编译优化，</span></span><br><span class="line">String str6 = getStr() + <span class="string">"CD"</span>;<span class="comment">//无编译优化，</span></span><br><span class="line">System.out.println(</span><br><span class="line">str1 == str2;   <span class="comment">//true</span></span><br><span class="line">str1 == str3;<span class="comment">//true</span></span><br><span class="line">str1 == str4;<span class="comment">//false</span></span><br><span class="line">str1 == str5;<span class="comment">//false</span></span><br><span class="line">str1 == str6;<span class="comment">//false</span></span><br><span class="line">); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;String的收获&quot;&gt;&lt;a href=&quot;#String的收获&quot; class=&quot;headerlink&quot; title=&quot;String的收获&quot;&gt;&lt;/a&gt;String的收获&lt;/h2&gt;&lt;h3 id=&quot;String-str1-“123”-和String-str2-new-String-“123”&quot;&gt;&lt;a href=&quot;#String-str1-“123”-和String-str2-new-String-“123”&quot; class=&quot;headerlink&quot; title=&quot;String str1 = “123”;和String str2 = new String(“123”);&quot;&gt;&lt;/a&gt;String str1 = “123”;和String str2 = new String(“123”);&lt;/h3&gt;&lt;h4 id=&quot;1-String-str1-“123”&quot;&gt;&lt;a href=&quot;#1-String-str1-“123”&quot; class=&quot;headerlink&quot; title=&quot;1.String str1 = “123”;&quot;&gt;&lt;/a&gt;1.String str1 = “123”;&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;最多创建一个String的对象，如果常量池已经存在“123”，就不需要new String().直接从常量池中获取该值。&lt;br&gt;如果常量池中没有该对象就new String(“123”);并开辟空间加载到常量中便于以后调用&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>dao层</title>
    <link href="http://yoursite.com/2019/11/19/dao%E5%B1%82/"/>
    <id>http://yoursite.com/2019/11/19/dao层/</id>
    <published>2019-11-19T10:14:54.791Z</published>
    <updated>2019-11-22T08:58:47.748Z</updated>
    
    <content type="html"><![CDATA[<h2 id="三层开发模板"><a href="#三层开发模板" class="headerlink" title="三层开发模板"></a>三层开发模板</h2><h2 id="dao层"><a href="#dao层" class="headerlink" title="dao层"></a>dao层</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.DAO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entities.User;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDAOImpl</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Connection conn = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据用户名查询用户信息并返回</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserByUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">/*链接数据库的工具类*/</span></span><br><span class="line">        DBUtil dbutil = <span class="keyword">new</span> DBUtilImpl();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">/*通过c3p0获取链接连接对象*/</span></span><br><span class="line">            conn = dbutil.getConnection();</span><br><span class="line">            String sql = <span class="string">"SELECT * FROM tb_user WHERE userName=? "</span>;</span><br><span class="line">            <span class="comment">/*通过conn连接预编译sql语句，用preparedStatement可以防止注入*/</span></span><br><span class="line">            pst = conn.prepareStatement(sql);</span><br><span class="line">            <span class="comment">/*把？号占位符替换成数据*/</span></span><br><span class="line">            pst.setString(<span class="number">1</span>, userName);</span><br><span class="line">            <span class="comment">/*执行sql语句并得到返回结果集用ResultSet接收*/</span></span><br><span class="line">            rs = pst.executeQuery();</span><br><span class="line">            <span class="comment">/*若查询出来数据用next从rs中获取*/</span></span><br><span class="line">            rs.next();</span><br><span class="line">            <span class="comment">/*把数据封装到user对象中*/</span></span><br><span class="line">            user = <span class="keyword">new</span> User(rs.getString(<span class="number">1</span>), rs.getString(<span class="number">2</span>), rs.getString(<span class="number">3</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"数据库操作错误"</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">/*关闭数据库链接释放资源*/</span></span><br><span class="line">            dbutil.close(conn, pst, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断该用户是否存在，若存在返回true不存在返回false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isExistence</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*设置一个标记*/</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">/*数据库工具类*/</span></span><br><span class="line">        DBUtil dbutil = <span class="keyword">new</span> DBUtilImpl();</span><br><span class="line">        <span class="comment">/*获取数据库连接*/</span></span><br><span class="line">        conn = dbutil.getConnection();</span><br><span class="line"><span class="comment">/*若没有获取到连接直接返回false*/</span></span><br><span class="line">        <span class="keyword">if</span> (conn == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        String sql = <span class="string">"SELECT * FROM tb_user WHERE userName=? "</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">/*通过conn连接预编译sql语句，用preparedStatement可以防止注入*/</span></span><br><span class="line">            pst = conn.prepareStatement(sql);</span><br><span class="line"><span class="comment">/*把？号占位符替换成数据*/</span></span><br><span class="line">            pst.setString(<span class="number">1</span>, userName);</span><br><span class="line"><span class="comment">/*执行sql语句并得到返回结果集用ResultSet接收*/</span></span><br><span class="line">            rs = pst.executeQuery();</span><br><span class="line">            <span class="comment">/*用next取数据，若没有取到数据，则证明不存在 把flag设为false*/</span></span><br><span class="line">            <span class="keyword">if</span> (!rs.next()) flag = <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">/*关闭系统资源*/</span></span><br><span class="line">            DBConnection.close(conn, pst, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*返回这个值*/</span></span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断用户名密码是否存在，用于登录</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isExistence</span><span class="params">(String user, String pass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        DBUtil dbutil = <span class="keyword">new</span> DBUtilImpl();</span><br><span class="line">        conn = dbutil.getConnection();</span><br><span class="line">        <span class="keyword">if</span> (conn == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;<span class="comment">//没有获取连接；</span></span><br><span class="line">        String sql = <span class="string">"SELECT * FROM tb_user WHERE userName=? and password=?"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pst = conn.prepareStatement(sql);</span><br><span class="line">            pst.setString(<span class="number">1</span>, user);</span><br><span class="line">            pst.setString(<span class="number">2</span>, pass);</span><br><span class="line">            rs = pst.executeQuery();</span><br><span class="line">            <span class="keyword">if</span> (!rs.next()) flag = <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            dbutil.close(conn, pst, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        DBUtil dbutil = <span class="keyword">new</span> DBUtilImpl();</span><br><span class="line">        conn = dbutil.getConnection();</span><br><span class="line">        <span class="keyword">if</span> (conn == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        String sql = <span class="string">"insert into tb_user(userName,password,tell) values(?,?,?)"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pst = conn.prepareStatement(sql);</span><br><span class="line">            pst.setString(<span class="number">1</span>, user.getUserName());</span><br><span class="line">            pst.setString(<span class="number">2</span>, user.getPassword());</span><br><span class="line">            pst.setString(<span class="number">3</span>, user.getTell());</span><br><span class="line">            pst.executeUpdate();</span><br><span class="line">            flag = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            dbutil.close(conn, pst, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateUser</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">        DBUtil dbutil = <span class="keyword">new</span> DBUtilImpl();</span><br><span class="line">        conn = dbutil.getConnection();</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (conn == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        String sql = <span class="string">"update tb_user set password=?, tell=? where userName=?"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            pst = conn.prepareStatement(sql);</span><br><span class="line">            pst.setString(<span class="number">1</span>, user.getPassword());</span><br><span class="line">            pst.setString(<span class="number">2</span>, user.getTell());</span><br><span class="line">            pst.setString(<span class="number">3</span>, user.getUserName());</span><br><span class="line">            pst.executeUpdate();</span><br><span class="line">            flag = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            dbutil.close(conn, pst, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="servlet控制层"><a href="#servlet控制层" class="headerlink" title="servlet控制层"></a>servlet控制层</h2><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.services.LoginManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginAjax</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">/*设置响应编码*/</span></span><br><span class="line">response.setContentType(<span class="string">"text/html;  charset=utf-8"</span>);</span><br><span class="line"><span class="comment">/*创建out响应输出对象*/</span></span><br><span class="line">PrintWriter out = response.getWriter();</span><br><span class="line"><span class="comment">/*从request域中获取session对象*/</span></span><br><span class="line">HttpSession session=request.getSession();</span><br><span class="line"><span class="comment">/*从request对象中获取用户名*/</span></span><br><span class="line">String account=request.getParameter(<span class="string">"account"</span>);</span><br><span class="line"><span class="keyword">if</span>(account==<span class="keyword">null</span>)&#123;account=<span class="string">""</span>;&#125;</span><br><span class="line">        <span class="comment">/*从request对象中获取密码*/</span></span><br><span class="line">String secret=request.getParameter(<span class="string">"secret"</span>);</span><br><span class="line"><span class="keyword">if</span>(secret==<span class="keyword">null</span>) secret=<span class="string">""</span>;</span><br><span class="line"><span class="comment">/*调用登录方法判断用户名密码是否存在*/</span></span><br><span class="line"><span class="keyword">if</span>(LoginManagement.login(account, secret))&#123;<span class="comment">//登录成功</span></span><br><span class="line">    <span class="comment">/*若存在则把用户名放到session中进行多个页面的共享*/</span></span><br><span class="line">session.setAttribute(<span class="string">"name"</span>, account);</span><br><span class="line"><span class="comment">/*响应这个用户名*/</span></span><br><span class="line">out.write(account);<span class="comment">//写回“OK”</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*用户不存在就直接响应一个字符串*/</span></span><br><span class="line"><span class="keyword">else</span> out.write(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">doGet(request,response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.entities.User;</span><br><span class="line"><span class="keyword">import</span> com.services.UserManagement;</span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Register</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">/*设置响应编码*/</span></span><br><span class="line">response.setContentType(<span class="string">"text/html;  charset=gb2312"</span>);</span><br><span class="line"><span class="comment">/*创建out响应输出对象*/</span></span><br><span class="line">PrintWriter out = response.getWriter();</span><br><span class="line"><span class="comment">/*从前端页面获取所有的表单注册数据*/</span></span><br><span class="line">String regData=request.getParameter(<span class="string">"mydata"</span>);</span><br><span class="line"><span class="comment">/*如果没有获取到就赋值一个字符串*/</span></span><br><span class="line"><span class="keyword">if</span>(regData==<span class="keyword">null</span>) regData=(String)<span class="string">"error"</span>;</span><br><span class="line"><span class="comment">/*通过工具类把从前端获取的这个字符串转成对象*/</span></span><br><span class="line">JSONObject obj=JSONObject.fromObject(regData);</span><br><span class="line"><span class="comment">/*通过工具类把获取到的这些数据封装到User对象中*/</span></span><br><span class="line">User user=(User)JSONObject.toBean(obj, User.class);</span><br><span class="line"><span class="comment">/*执行添加哟能过户的方法*/</span></span><br><span class="line"><span class="keyword">if</span>(UserManagement.add_User(user))</span><br><span class="line"><span class="comment">/*若添加成功返回OK*/</span></span><br><span class="line">out.write(<span class="string">"ok"</span>);</span><br><span class="line"><span class="comment">/*反之返回error*/</span></span><br><span class="line"><span class="keyword">else</span> out.write(<span class="string">"error"</span>);</span><br><span class="line"><span class="comment">/*关闭流对象释放资源*/</span></span><br><span class="line">out.flush();</span><br><span class="line">out.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception ex)&#123;  </span><br><span class="line">    ex.printStackTrace();  </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">doGet(request,response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="安全退出"><a href="#安全退出" class="headerlink" title="安全退出"></a>安全退出</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExitAjax</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">/*获取session对象*/</span></span><br><span class="line">HttpSession session=request.getSession();</span><br><span class="line"><span class="comment">/*判断session是否为空*/</span></span><br><span class="line"><span class="keyword">if</span>(session!=<span class="keyword">null</span>)</span><br><span class="line"><span class="comment">/*若不为空就销毁session中的所有数据*/</span></span><br><span class="line">session.invalidate();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request,response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;三层开发模板&quot;&gt;&lt;a href=&quot;#三层开发模板&quot; class=&quot;headerlink&quot; title=&quot;三层开发模板&quot;&gt;&lt;/a&gt;三层开发模板&lt;/h2&gt;&lt;h2 id=&quot;dao层&quot;&gt;&lt;a href=&quot;#dao层&quot; class=&quot;headerlink&quot; title=&quot;dao层&quot;&gt;&lt;/a&gt;dao层&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>SSM基础配置</title>
    <link href="http://yoursite.com/2019/11/10/SSM%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/11/10/SSM基础配置/</id>
    <published>2019-11-10T04:25:34.111Z</published>
    <updated>2019-11-10T04:27:17.827Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSM基本配置"><a href="#SSM基本配置" class="headerlink" title="SSM基本配置"></a>SSM基本配置</h1><h2 id="一-基础框架文件"><a href="#一-基础框架文件" class="headerlink" title="一.基础框架文件"></a>一.基础框架文件</h2><blockquote><p><img src="https://img-blog.csdnimg.cn/20191110113900122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTAxODQ0NA==,size_16,color_FFFFFF,t_70" alt="这里是引用"></p></blockquote><h2 id="二-配置文件详情"><a href="#二-配置文件详情" class="headerlink" title="二.配置文件详情"></a>二.配置文件详情</h2><a id="more"></a><h4 id="1-基于mybatis配置"><a href="#1-基于mybatis配置" class="headerlink" title="1.基于mybatis配置"></a>1.基于mybatis配置</h4><p><strong>1.sqlMapConfig.xml如下：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE configuration PUBLIC <span class="string">"-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">&lt;settings&gt;</span><br><span class="line">        &lt;!--开启驼峰命名--&gt;</span><br><span class="line">        &lt;setting name=<span class="string">"mapUnderscoreToCamelCase"</span> value=<span class="string">"true"</span>/&gt;</span><br><span class="line">    &lt;/settings&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--开启别名--&gt;</span><br><span class="line">    &lt;typeAliases&gt;</span><br><span class="line">        &lt;!--该包下面的所有类不用引用全类名，直接使用类的名字即可无视大小写--&gt;</span><br><span class="line">        &lt;<span class="keyword">package</span> name=<span class="string">"com.shiyan.bean"</span>/&gt;</span><br><span class="line">    &lt;/typeAliases&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> &lt;!--查询sql映射文件，项目启动的时候加载这个mappers配置，--&gt;</span><br><span class="line">    &lt;mappers&gt;</span><br><span class="line">        &lt;!--resource相对于java和resource下的文件，</span><br><span class="line">        加载该文件下面的salMapper接口的配置文件，通过找到的这个配置文件加载这个接口及接口方法--&gt;</span><br><span class="line">        &lt;mapper resource=<span class="string">"Mapper/CustomerMapper.xml"</span>/&gt;</span><br><span class="line">    &lt;/mappers&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!--分页插件，便于分页--&gt;</span><br><span class="line">    &lt;plugins&gt;</span><br><span class="line">        &lt;plugin interceptor="com.github.pagehelper.PageInterceptor"&gt;&lt;/plugin&gt;</span><br><span class="line">    &lt;/plugins&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p><strong>2.applicationConfing.xml配置：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">       xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">       xmlns:context=<span class="string">"http://www.springframework.org/schema/context"</span></span><br><span class="line">       xmlns:tx=<span class="string">"http://www.springframework.org/schema/tx"</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">"http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line"><span class="string">       http://www.springframework.org/schema/context</span></span><br><span class="line"><span class="string">       https://www.springframework.org/schema/context/spring-context.xsd</span></span><br><span class="line"><span class="string">       http://www.springframework.org/schema/tx</span></span><br><span class="line"><span class="string">       http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;!--加载springMvc.xml的配置归于IOC容器管理，并且使applicationConfing文件在服务启动就加载--&gt;</span><br><span class="line">    &lt;<span class="keyword">import</span> resource=<span class="string">"classpath:spring-mvc.xml"</span>/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;!--相当于Mybatis层的配置，读取jdbc.properties的数据库配置--&gt;</span><br><span class="line">    &lt;context:property-placeholder location=<span class="string">"classpath:jdbc.properties"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--创建数据源--&gt;</span><br><span class="line">    &lt;bean <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.apache.commons.dbcp.BasicDataSource"</span> id=<span class="string">"dataSource"</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">"driverClassName"</span> value=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"url"</span> value=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"username"</span> value=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"password"</span> value=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span><br><span class="line">        &lt;!--最大连接数--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"maxActive"</span> value=<span class="string">"10"</span>/&gt;</span><br><span class="line">        &lt;!--最大空闲数--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"maxIdle"</span> value=<span class="string">"5"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--创建SqlSessionFactory对象--&gt;</span><br><span class="line">    &lt;bean <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span> id=<span class="string">"sqlSessionFactory"</span>&gt;</span><br><span class="line">        &lt;!--关联连接池--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"dataSource"</span> ref=<span class="string">"dataSource"</span>/&gt;</span><br><span class="line">        &lt;!--加载sql映射文件  value=<span class="string">"classpath:Mapper/CustomerMapper.xml--&gt;</span></span><br><span class="line"><span class="string">        &lt;property name="</span>mapperLocations<span class="string">" value="</span>classpath:Mapper<span class="comment">/*.xml"/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/bean&gt;</span></span><br><span class="line"><span class="comment">    &lt;!--方式一（不推荐使用）：需要创建CustomerMappperImol对象，并在该对象中注入SqlSessionFactory--&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;!--方式二：配置mapper接口--&gt;</span></span><br><span class="line"><span class="comment">   &lt;!-- &lt;bean class="org.mybatis.spring.mapper.MapperFactoryBean" id="customerMapper"&gt;</span></span><br><span class="line"><span class="comment">        &amp;lt;!&amp;ndash;关联要使用的Mapper接口&amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="mapperInterface" value="com.shiyan.dao.CustomerMapper"/&gt;</span></span><br><span class="line"><span class="comment">        &amp;lt;!&amp;ndash;关联SqlSessionFactory&amp;ndash;&amp;gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="sqlSessionFactory" ref="sqlSessionFactory"/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/bean&gt;--&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;!--方式三：mapper接口的扫描，只需要注册这个类MapperScannerConfigurer，并使用所以不用配置id--&gt;</span></span><br><span class="line"><span class="comment">    &lt;!--使用这种Mapper接口扫描的方式进行配置，那么每一个Mapper接口在Spring容器中的名称id为类名首字母小写--&gt;</span></span><br><span class="line"><span class="comment">    &lt;bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" &gt;</span></span><br><span class="line"><span class="comment">        &lt;!--配置mapper接口所在的包的路径,自动扫描并加载这个包下面的所有mapper接口--&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="basePackage" value="com.shiyan.dao"/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/bean&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;!--开启Spring的IOC注解的扫描，将Service和Repository加入IOC容器--&gt;</span></span><br><span class="line"><span class="comment">    &lt;context:component-scan base-package="com.shiyan"/&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;!--开启Spring事务，相当于Service层配置--&gt;</span></span><br><span class="line"><span class="comment">    &lt;!--事务管理器--&gt;</span></span><br><span class="line"><span class="comment">    &lt;bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager"&gt;</span></span><br><span class="line"><span class="comment">        &lt;!--关联dataSource数据源，对数据库的事务进行管理--&gt;</span></span><br><span class="line"><span class="comment">        &lt;property name="dataSource" ref="dataSource"/&gt;</span></span><br><span class="line"><span class="comment">    &lt;/bean&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;!--启用Spring事务的注解操作,关联上面的transactionManager就可以使用注解对某一个service业务进行事务的管理--&gt;</span></span><br><span class="line"><span class="comment">    &lt;!--    在需要被事务管理的service业务类上添加  @Transactional这个注解即可</span></span><br><span class="line"><span class="comment">            @Transactional</span></span><br><span class="line"><span class="comment">            public class CustomerServiceImpl implements CustomerService &#123;</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line"><span class="comment">    &lt;tx:annotation-driven transaction-manager="transactionManager"/&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;/beans&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3.基于mysql的jdbc.properties文件</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql:<span class="comment">//localhost:3306/ssm?characterEncoding=utf-8</span></span><br><span class="line">jdbc.username=<span class="string">""</span></span><br><span class="line">jdbc.password=<span class="string">""</span></span><br></pre></td></tr></table></figure><p><strong>4.springMvc.xml配置文件</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">       xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">       xmlns:mvc=<span class="string">"http://www.springframework.org/schema/mvc"</span></span><br><span class="line">       xmlns:context=<span class="string">"http://www.springframework.org/schema/context"</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">"http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">         http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line"><span class="string">         http://www.springframework.org/schema/mvc</span></span><br><span class="line"><span class="string">         http://www.springframework.org/schema/mvc/spring-mvc.xsd</span></span><br><span class="line"><span class="string">         http://www.springframework.org/schema/context</span></span><br><span class="line"><span class="string">         https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--<span class="number">1</span>.开启注解驱动--&gt;</span><br><span class="line">    &lt;mvc:annotation-driven/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--<span class="number">2</span>.静态资源过滤，js和css，图片等各种静态资源--&gt;</span><br><span class="line">    &lt;mvc:<span class="keyword">default</span>-servlet-handler/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--<span class="number">3</span>.扫描包：controller。哪些类上加了controller就是前端控制器--&gt;</span><br><span class="line">    &lt;context:component-scan base-<span class="keyword">package</span>=<span class="string">"com.shiyan.controller"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--<span class="number">4</span>.配置视图解析器，指定controller返回的视图前缀和后缀--&gt;</span><br><span class="line">    &lt;bean <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">"viewClass"</span> value=<span class="string">"org.springframework.web.servlet.view.JstlView"</span>/&gt;</span><br><span class="line">        &lt;!--前缀--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"prefix"</span> value=<span class="string">"/WEB-INF/jsp/"</span>/&gt;</span><br><span class="line">        &lt;!--后缀--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"suffix"</span> value=<span class="string">".jsp"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure><p><strong>5.log4g.properties配置</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#定义输出级别</span><br><span class="line">log4j.rootLogger=DEBUG,Console,File</span><br><span class="line">#日志输出方式：控制台输出</span><br><span class="line"></span><br><span class="line">log4j.appender.Console=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.Console.Target=System.out</span><br><span class="line">log4j.appender.Console.Encoding=GBK</span><br><span class="line"></span><br><span class="line">#可以灵活地指定布局模式</span><br><span class="line">log4j.appender.Console.layout=org.apache.log4j.PatternLayout</span><br><span class="line">#log4j.appender.Console.layout.ConversionPattern = %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; -%p (%F\:%L)- %m%n</span><br><span class="line">#打印格式栗子：2017-08-11 15:36 -DEBUG (HttpServletBean.java:174)- Servlet 'mvc' configured successfully</span><br><span class="line">log4j.appender.Console.layout.ConversionPattern = %d&#123;yyyy-MM-dd HH:mm&#125; -%p (%F\:%L)- %m%n</span><br><span class="line"></span><br><span class="line">### 打印SQL ###</span><br><span class="line">#log4j.logger.com.ibatis=DEBUG</span><br><span class="line">#log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG</span><br><span class="line">#log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG</span><br><span class="line">#log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG</span><br><span class="line">log4j.logger.java.sql.Connection=DEBUG</span><br><span class="line">log4j.logger.java.sql.Statement=DEBUG</span><br><span class="line">log4j.logger.java.sql.PreparedStatement=DEBUG</span><br><span class="line">#log4j.logger.java.sql.ResultSet=DEBUG</span><br></pre></td></tr></table></figure><p><strong>6.Mapper文件夹下面的Mapper.xml（相当于Dao接口的实现类）配置</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE mapper PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">        &lt;!--命名空间，即要映射的Dao接口的全类名。按住CTRL点击这个类名能跳转到Dao接口就配置完成了--&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"com.shiyan.dao.CustomerMapper"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--查询全部，id必须是Dao接口的方法名才能，在sqlMapConfig.xml文件配置别名后 resultType可以使用取的别名，自动添加包扫描别名默认是该类名Customer--&gt;</span><br><span class="line">    &lt;select id=<span class="string">"findAll"</span> resultType=<span class="string">"com.shiyan.domain.Customer"</span>&gt;</span><br><span class="line">        select * from t_customer;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><p><strong>7.web.xml配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span><br><span class="line">&lt;web-app xmlns=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span><br><span class="line">         xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">         xsi:schemaLocation=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span><br><span class="line">         version=<span class="string">"4.0"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--启动spring其内部包含springmvc和mybatis的配置一起加载--&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">        &lt;servlet-name&gt;DispatcherServlet&lt;/servlet-name&gt;</span><br><span class="line">        &lt;servlet-<span class="class"><span class="keyword">class</span>&gt;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">web</span>.<span class="title">servlet</span>.<span class="title">DispatcherServlet</span>&lt;/<span class="title">servlet</span>-<span class="title">class</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;!--初始化参数：读取<span class="title">spring</span>-<span class="title">mvc</span>.<span class="title">xml</span>的配置文件--&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">init</span>-<span class="title">param</span>&gt;</span></span><br><span class="line"><span class="class">            &lt;<span class="title">param</span>-<span class="title">name</span>&gt;<span class="title">contextConfigLocation</span>&lt;/<span class="title">param</span>-<span class="title">name</span>&gt;</span></span><br><span class="line">            &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;</span><br><span class="line">        &lt;/init-param&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">        &lt;servlet-name&gt;DispatcherServlet&lt;/servlet-name&gt;</span><br><span class="line">        &lt;!--</span><br><span class="line">            /:拦截所有请求不拦截 .jsp</span><br><span class="line">            <span class="comment">/*:拦截所有的请求宝库jsp页面</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line"><span class="comment">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">    &lt;/servlet-mapping&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &lt;!--配置编码过滤器--&gt;</span></span><br><span class="line"><span class="comment">    &lt;filter&gt;</span></span><br><span class="line"><span class="comment">        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span></span><br><span class="line"><span class="comment">        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</span></span><br><span class="line"><span class="comment">        &lt;init-param&gt;</span></span><br><span class="line"><span class="comment">            &lt;param-name&gt;encoding&lt;/param-name&gt;</span></span><br><span class="line"><span class="comment">            &lt;param-value&gt;utf-8&lt;/param-value&gt;</span></span><br><span class="line"><span class="comment">        &lt;/init-param&gt;</span></span><br><span class="line"><span class="comment">    &lt;/filter&gt;</span></span><br><span class="line"><span class="comment">    &lt;filter-mapping&gt;</span></span><br><span class="line"><span class="comment">        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span></span><br><span class="line"><span class="comment">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">    &lt;/filter-mapping&gt;</span></span><br><span class="line"><span class="comment">&lt;/web-app&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>基本框架搭建完成后就可以很方便的编写Controller和视图了</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SSM基本配置&quot;&gt;&lt;a href=&quot;#SSM基本配置&quot; class=&quot;headerlink&quot; title=&quot;SSM基本配置&quot;&gt;&lt;/a&gt;SSM基本配置&lt;/h1&gt;&lt;h2 id=&quot;一-基础框架文件&quot;&gt;&lt;a href=&quot;#一-基础框架文件&quot; class=&quot;headerlink&quot; title=&quot;一.基础框架文件&quot;&gt;&lt;/a&gt;一.基础框架文件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20191110113900122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTAxODQ0NA==,size_16,color_FFFFFF,t_70&quot; alt=&quot;这里是引用&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;二-配置文件详情&quot;&gt;&lt;a href=&quot;#二-配置文件详情&quot; class=&quot;headerlink&quot; title=&quot;二.配置文件详情&quot;&gt;&lt;/a&gt;二.配置文件详情&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Mybatis-Spring整合的三种方式</title>
    <link href="http://yoursite.com/2019/10/27/Mybatis-Spring%E6%95%B4%E5%90%88%E7%9A%84%E4%B8%89%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/10/27/Mybatis-Spring整合的三种方式/</id>
    <published>2019-10-27T03:46:23.590Z</published>
    <updated>2019-10-27T03:48:50.849Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mybatis-Spring整合的三种方式"><a href="#Mybatis-Spring整合的三种方式" class="headerlink" title="Mybatis-Spring整合的三种方式"></a>Mybatis-Spring整合的三种方式</h2><p><strong>接口类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shiyan.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.shiyan.pojo.Books;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BooksMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加一本书</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Books book)</span></span>;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>接口的实现类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.shiyan.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.shiyan.pojo.Books;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.support.SqlSessionDaoSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BooksMapperImpl</span> <span class="keyword">extends</span> <span class="title">SqlSessionDaoSupport</span> <span class="keyword">implements</span> <span class="title">BooksMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addBook</span><span class="params">(Books book)</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = <span class="keyword">this</span>.getSqlSession();</span><br><span class="line">        <span class="keyword">return</span> sqlSession.insert(<span class="string">"addBook"</span>, book);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="一-Mybatis-Spring–有Mapper实现类，无实现类，和扫描接口"><a href="#一-Mybatis-Spring–有Mapper实现类，无实现类，和扫描接口" class="headerlink" title="一.Mybatis-Spring–有Mapper实现类，无实现类，和扫描接口"></a>一.Mybatis-Spring–有Mapper实现类，无实现类，和扫描接口</h4><p><strong>1.applicationContext.xml配置文件</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;beans xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">       xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">       xmlns:context=<span class="string">"http://www.springframework.org/schema/context"</span></span><br><span class="line">       xsi:schemaLocation=<span class="string">"http://www.springframework.org/schema/beans</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line"><span class="string">        http://www.springframework.org/schema/context</span></span><br><span class="line"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--<span class="number">1</span>.关联数据库配置文件，自动读取properties配置文件--&gt;</span><br><span class="line">    &lt;context:property-placeholder location=<span class="string">"classpath:database.properties"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--<span class="number">2</span>.连接池</span><br><span class="line">            dbcp:半自动化，不能自动连接</span><br><span class="line">            c3p0:自动化操作，（自动化的加载配置文件，并且可以自动设置到对象中！）</span><br><span class="line">            durid:  hikari</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"dataSource"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span><br><span class="line">        &lt;!--同过关联的数据库配置文件就可以通过数据库文件中的key====$&#123;jdbc.driver&#125;获取到相应的value--&gt;</span><br><span class="line">        &lt;property name="driverClass" value="$&#123;jdbc.driver&#125;"&gt;&lt;/property&gt;</span><br><span class="line">        &lt;property name="jdbcUrl" value="$&#123;jdbc.url&#125;"&gt;&lt;/property&gt;</span><br><span class="line">        &lt;property name="user" value="$&#123;jdbc.username&#125;"&gt;&lt;/property&gt;</span><br><span class="line">        &lt;property name="password" value="$&#123;jdbc.password&#125;"&gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- c3p0连接池的私有属性 --&gt;</span><br><span class="line">        &lt;property name=<span class="string">"maxPoolSize"</span> value=<span class="string">"30"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"minPoolSize"</span> value=<span class="string">"10"</span>/&gt;</span><br><span class="line">        &lt;!-- 关闭连接后不自动commit --&gt;</span><br><span class="line">        &lt;property name=<span class="string">"autoCommitOnClose"</span> value=<span class="string">"false"</span>/&gt;</span><br><span class="line">        &lt;!-- 获取连接超时时间 --&gt;</span><br><span class="line">        &lt;property name=<span class="string">"checkoutTimeout"</span> value=<span class="string">"10000"</span>/&gt;</span><br><span class="line">        &lt;!-- 当获取连接失败重试次数 --&gt;</span><br><span class="line">        &lt;property name=<span class="string">"acquireRetryAttempts"</span> value=<span class="string">"2"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!--<span class="number">3</span>.创建sqlSessionFactory对象--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"sqlSessionFactory"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">"dataSource"</span> ref=<span class="string">"dataSource"</span> /&gt;</span><br><span class="line">        &lt;!--配置Mybatis配置文件--&gt;</span><br><span class="line">        &lt;property name="configLocation" value="classpath:mybatis-config.xml"&gt;&lt;/property&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line"> &lt;!--<span class="number">4</span>.整合方式一===配置Mapper接口的实现类</span><br><span class="line">            创建接口的实现类，注入sqlSessionFactory--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"booksMapperImpl"</span>  <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.shiyan.dao.BooksMapperImpl"</span>&gt;</span><br><span class="line">        &lt;!--关联sqlSessionFactory--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"sqlSessionFactory"</span> ref=<span class="string">"sqlSessionFactory"</span>/&gt;</span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--<span class="number">4.2</span>整合方式三===配置Mapper接口</span><br><span class="line">            配置mapper接口，注入sqlSessionFactory--&gt;</span><br><span class="line">    &lt;bean id=<span class="string">"BooksMapper"</span>  <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.mybatis.spring.mapper.MapperFactoryBean"</span>&gt;</span><br><span class="line">        &lt;!--关联mapper接口--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"mapperInterface"</span>  value=<span class="string">"com.shiyan.dao.BooksMapper"</span>/&gt;</span><br><span class="line">        &lt;!--关联sqlSessionFactory--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"sqlSessionFactory"</span> ref=<span class="string">"sqlSessionFactory"</span>/&gt;</span><br><span class="line">        </span><br><span class="line">&lt;!--此配置是最常用的，相比于第二种方式，可以一次加载多个mapper接口，每一个mapper接口在spring容器中的id为该类的类名首字母小写。接口BooksMapper就是bookMapper--&gt;</span><br><span class="line"> &lt;!--<span class="number">4.3</span>整合方式三===配置dao扫描包，动态的实现了Dao接口可以注入到spring容器中--&gt;</span><br><span class="line">    &lt;bean <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span><br><span class="line">        &lt;!--注入sqlSessionFactory--&gt;</span><br><span class="line">        &lt;property name=<span class="string">"sqlSessionFactoryBeanName"</span> value=<span class="string">"sqlSessionFactory"</span>/&gt;</span><br><span class="line">        &lt;!--要扫描的dao包--&gt;</span><br><span class="line">        &lt;property name="basePackage" value="com.shiyan.dao"&gt;&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/bean&gt;</span><br><span class="line">&lt;/beans&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Mybatis-Spring整合的三种方式&quot;&gt;&lt;a href=&quot;#Mybatis-Spring整合的三种方式&quot; class=&quot;headerlink&quot; title=&quot;Mybatis-Spring整合的三种方式&quot;&gt;&lt;/a&gt;Mybatis-Spring整合的三种方式&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;接口类&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.shiyan.dao;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.shiyan.pojo.Books;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.apache.ibatis.annotations.Param;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BooksMapper&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//增加一本书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addBook&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Books book)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>代码的颜色</title>
    <link href="http://yoursite.com/2019/10/23/%E4%BB%A3%E7%A0%81%E7%9A%84%E9%A2%9C%E8%89%B2/"/>
    <id>http://yoursite.com/2019/10/23/代码的颜色/</id>
    <published>2019-10-23T02:06:50.628Z</published>
    <updated>2019-10-23T02:09:37.507Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码中的颜色表示"><a href="#代码中的颜色表示" class="headerlink" title="代码中的颜色表示"></a>代码中的颜色表示</h2><a id="more"></a><blockquote><p><strong>颜色代码:颜色代码:红色#FF0000 深紫色 #871F78 褐红色 #8E236B 石英色 #D9D9F3绿色#00FF00 深石板蓝 #6B238E 中海蓝色 #32CD99 艳蓝色 #5959AB蓝色#0000FF 深铅灰色 #2F4F4F 中蓝色 #3232CD 鲑鱼色 #6F4242牡丹红 #FF00FF 深棕褐色 #97694F 中森林绿 #6B8E23 猩红色 #BC1717青色#00FFFF 深绿松石色 #7093DB 中鲜黄色 #EAEAAE 海绿色 #238E68黄色#FFFF00 暗木色 #855E42 中兰花色 #9370DB 半甜巧克力色 #6B4226黑色#000000 淡灰色 #545454 中海绿色 #426F42 赭色 #8E6B23海蓝#70DB93 土灰玫瑰红色 #856363 中石板蓝色 #7F00FF 银色 #E6E8FA巧克力色 #5C3317 长石色 #D19275 中春绿色 #7FFF00 天蓝 #3299CC蓝紫色 #9F5F9F 火砖色 #8E2323 中绿松石色 #70DBDB 石板蓝 #007FFF黄铜色 #B5A642 森林绿 #238E23 中紫红色 #DB7093 艳粉红色 #FF1CAE亮金色 #D9D919 金色 #CD7F32 中木色 #A68064 春绿色 #00FF7F棕色#A67D3D 鲜黄色 #DBDB70 深藏青色 #2F2F4F 钢蓝色 #236B8E青铜色 #8C7853 灰色 #C0C0C0 海军蓝 #23238E 亮天蓝色 #38B0DE2号青铜色 #A67D3D 铜绿色 #527F76 霓虹篮 #4D4DFF 棕褐色 #DB9370士官服蓝色 #5F9F9F 青黄色 #93DB70 霓虹粉红 #FF6EC7 紫红色 #D8BFD8冷铜色 #D98719 猎人绿 #215E21 新深藏青色 #00009C 石板蓝色 #ADEAEA铜色#B87333 印度红 #4E2F2F 新棕褐色 #EBC79E 浓深棕色 #5C4033珊瑚红 #FF7F00 土黄色 #9F9F5F 暗金黄色 #CFB53B 淡浅灰色 #CDCDCD紫蓝色 #42426F 浅蓝色 #C0D9D9 橙色 #FF7F00 紫罗兰色 #4F2F4F深棕#5C4033 浅灰色 #A8A8A8 橙红色 #FF2400 紫罗兰红色 #CC3299深绿#2F4F2F 浅钢蓝色 #8F8FBD 淡紫色 #DB70DB 麦黄色 #D8D8BF深铜绿色 #4A766E 浅木色 #E9C2A6 浅绿色 #8FBC8F 黄绿色 #99CC32深橄榄绿 #4F4F2F 石灰绿色 #32CD32 粉红色 #BC8F8F深兰花色 #9932CD 桔黄色 #E47833 李子色 #EAADEA</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;代码中的颜色表示&quot;&gt;&lt;a href=&quot;#代码中的颜色表示&quot; class=&quot;headerlink&quot; title=&quot;代码中的颜色表示&quot;&gt;&lt;/a&gt;代码中的颜色表示&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo踩坑</title>
    <link href="http://yoursite.com/2019/10/23/Hexo%E8%B8%A9%E5%9D%91/"/>
    <id>http://yoursite.com/2019/10/23/Hexo踩坑/</id>
    <published>2019-10-23T01:55:55.403Z</published>
    <updated>2019-10-23T01:56:25.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo踩坑记录"><a href="#Hexo踩坑记录" class="headerlink" title="Hexo踩坑记录"></a>Hexo踩坑记录</h2><blockquote><p>$ hexo d (提交到github)<br>    提示错误信息如下：<br><strong>ERROR Deployer not found: git</strong></p></blockquote><p>解决方案</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install  --save  hexo-deployer-git</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="错误记录2"><a href="#错误记录2" class="headerlink" title="错误记录2"></a>错误记录2</h4><blockquote><p>在使用ssh加公钥认证时会输入 ssh -T Github.com，认证成功后会输出如下Log。<br>“but GitHub does not provide shell access ”这句话的意思是，GitHub不提供shell（ssh）访问/接入权限。<br>    ssh -T选项的意思为，不分配伪终端。<br>    当你在使用ssh协议连接到自己或者其他服务器时，本地终端会显示命令提示符，你可以在上面操作输入命令ls等。<br>    结合上面几点，这句话的意思即为你无法使用ssh协议直接登录github，在github服务器上建立一个伪终端，并进行操作。&gt;<br>    所以，这句提示并不是一个错误，而是github输出的一句提示语。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo踩坑记录&quot;&gt;&lt;a href=&quot;#Hexo踩坑记录&quot; class=&quot;headerlink&quot; title=&quot;Hexo踩坑记录&quot;&gt;&lt;/a&gt;Hexo踩坑记录&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;$ hexo d (提交到github)&lt;br&gt;    提示错误信息如下：&lt;br&gt;&lt;strong&gt;ERROR Deployer not found: git&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解决方案&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install  --save  hexo-deployer-git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
